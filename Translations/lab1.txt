Working with Virtual Machines

Objectives

In this lab, you learn how to perform the following tasks:

Customize an application server

Install and configure necessary software

Configure network access

Schedule regular backups

Task 1: Create the VM

# Set the project 
    gcloud config set project Project_id

# Reserve an ip address
    gcloud compute addresses create mc-server-ip --region=us-central1

# Create a VM 
    gcloud compute instances create mc-server --project=Project_id --zone=us-central1-a \
        --service-account=459569148061-compute@developer.gserviceaccount.com --scopes=https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/trace.append,https://www.googleapis.com/auth/devstorage.read_write
        --create-disk name=minecraft-disk, size=50GB, type=pd-ssd
        --subnet=default --tags=minecraft-server --address=mc-server-ip

Task 2: Prepare the data disk

# ssh to the VM
    gcloud compute ssh mc-server
# Crete a directory in the VM 
    sudo mkdir -p /home/minecraft

# Format the disk
    sudo mkfs.ext4 -F -E lazy_itable_init=0,\
    lazy_journal_init=0,discard \
    /dev/disk/by-id/google-minecraft-disk

# Mount the disk
    sudo mount -o discard,defaults /dev/disk/by-id/google-minecraft-disk /home/minecraft

Task 3: Install and run the application

# Update the Debian repositories on the VM
    sudo apt-get update

# Install the headless JRE
    sudo apt-get install -y default-jre-headless

# Navigate to the directory where the persistent disk is mounted
    cd /home/minecraft

#  Install wget
    sudo apt-get install wget

# Download the current Minecraft server JAR file
    sudo wget https://launcher.mojang.com/v1/objects/d0d0fe2b1dc6ab4c65554cb734270872b72dadd6/server.jar

# Initialize the Minecraft server
    sudo java -Xmx1024M -Xms1024M -jar server.jar nogui
    sudo ls -l

# Edit the EULA
    sudo nano eula.txt

    Ctrl+o Enter ctrl+x 

# Install screen
    sudo apt-get install -y screen

# Start your Minecraft server in a screen
    sudo screen -S mcs java -Xmx1024M -Xms1024M -jar server.jar nogui

#  Detach the screen terminal
    Ctrl+A, Ctrl+D

# Reattach the terminal
    sudo screen -r mcs

# Exit the SSH terminal
    exit

Task 4: Allow client traffic

# Create a firewall rule
    gcloud compute  firewall-rules create minecraft-rule --direction=INGRESS --priority=1000 
    --network=default --action=ALLOW --rules=tcp:25565 --source-ranges=0.0.0.0/0 
    --target-tags=minecraft-server


Task 5: Schedule regular backups

# ssh to the VM 
    gcloud compute ssh mc-server

# Create a globally unique bucket name
    export YOUR_BUCKET_NAME=$()

# Verify it with echo
    echo $YOUR_BUCKET_NAME

# Create the bucket using the gsutil tool
    gsutil mb gs://$YOUR_BUCKET_NAME-minecraft-backup

Create a backup script

# Navigate to your home directory
    cd /home/minecraft

# Create the script
    sudo nano /home/minecraft/backup.sh

# Copy and paste the following script into the file
    #!/bin/bash
    screen -r mcs -X stuff '/save-all\n/save-off\n'
    /usr/bin/gsutil cp -R ${BASH_SOURCE%/*}/world gs://${YOUR_BUCKET_NAME}-minecraft-backup/$(date "+%Y%m%d-%H%M%S")-world
    screen -r mcs -X stuff '/save-on\n' 

    Ctrl+o Enter , Ctrl+x 

# Make the script executable
    sudo chmod 755 /home/minecraft/backup.sh

# Run the backup script
    . /home/minecraft/backup.sh

# Verify that the backup file was written
    gsutil ls gs://$YOUR_BUCKET_NAME-minecraft-backup

# Open the cron table for editing 
    sudo crontab -e
    paste the following line at the bottom 
    0 */4 * * * /home/minecraft/backup.sh

    Ctrl+o Enter, Ctrl+x 

Task 6: Server maintenance

# Stop screen 
    sudo screen -r -X stuff '/stop\n'
    exit 

# Stop the VM
    gcloud compute instances stop mc-server

# Automate server maintenance with startup and shutdown scripts

# Custom metadata
    gcloud compute instances add-metadata mc-server metadata=startup-script-url=https://storage.googleapis.com/cloud-training/archinfra/mcserver/startup.sh, 
    shutdown-script-url=https://storage.googleapis.com/cloud-training/archinfra/mcserver/shutdown.sh